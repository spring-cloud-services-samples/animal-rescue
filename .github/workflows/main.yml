name: Test All

on: [push]

jobs:
  backend-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Setup Java JDK
      uses: actions/setup-java@v1.4.3
      with:
        java-version: 11

    - name: Run tests
      run: ./scripts/local.sh backend

  codecov:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup Java JDK
      uses: actions/setup-java@v1.4.3
      with:
        java-version: 11

    - name: Run codecov check
      run: |
        ./gradlew jacocoTestReport

    - name: Upload code coverage results
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./backend/build/reports/jacoco/report.xml
        fail_ci_if_error: true

  e2e-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Setup Java JDK
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 11

      - name: Install dependencies
        run: ./scripts/local.sh init

      - name: Run tests
        run: |
          ./scripts/local.sh start --quiet
          ./scripts/local.sh e2e --quiet
          ./scripts/local.sh stop

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Install dependencies
        run: ./scripts/local.sh init

      - name: Run Frontend ESLint
        run: |
          cd frontend
          npm run lint

      - name: Run E2E ESLint
        run: |
          cd e2e
          npm run lint

  publish:
    runs-on: ubuntu-latest
    needs: [ backend-test, e2e-test, lint ]
    if: |
      github.ref == 'refs/heads/main' &&
      needs.backend-test.result == 'success' &&
      needs.e2e-test.result == 'success' &&
      needs.lint.result == 'success'
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build frontend image
        run: |
          ./scripts/local.sh init
          ./gradlew :frontend:assemble
          docker build frontend -t springcloudservices/animal-rescue-frontend:latest
      - name: Push frontend image
        run: docker push springcloudservices/animal-rescue-frontend:latest

      - name: Build backend image
        uses: mamezou-tech/buildpacks-action@master
        with:
          image: springcloudservices/animal-rescue-backend
          path: backend
          builder: gcr.io/paketo-buildpacks/builder:base
      - name: Push backend image
        run: docker push springcloudservices/animal-rescue-backend:latest
