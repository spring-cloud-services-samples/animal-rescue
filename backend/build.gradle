plugins {
	id 'org.springframework.boot' version '2.2.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'jacoco'
}

group = 'io.spring.cloud.samples.animalrescue'
version = '0.0.1-SNAPSHOT'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

repositories {
	mavenCentral()
}

def propertyDrivenProfiles;
if (project.hasProperty('oauth2login')) {
    propertyDrivenProfiles = 'oauth2login'
    apply from: rootProject.file('build-oauth2login.gradle');
}

bootRun {
    systemProperties = [
        'spring.profiles.active': propertyDrivenProfiles
    ]
}

dependencies {
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	implementation "org.springframework.security:spring-security-web"

	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation "org.springframework.security:spring-security-oauth2-resource-server"
	implementation "org.springframework.security:spring-security-oauth2-jose"
 	implementation("io.pivotal.cfenv:java-cfenv-boot:2.1.1.RELEASE")

    runtime 'com.h2database:h2'

	testImplementation "org.springframework.security:spring-security-oauth2-client"
	testImplementation('org.springframework.security:spring-security-test')
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'io.projectreactor:reactor-test'
 	testImplementation("io.pivotal.cfenv:java-cfenv-test-support:2.1.1.RELEASE")
}

test {
	useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.enabled true
		xml.destination new File("${buildDir}/reports/jacoco/report.xml")
		html.enabled false
		csv.enabled false
    }
}

jacocoTestReport.dependsOn test
